<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>幸好我们还有音乐 第三期</title>
    <link href="/2022/08/27/%E5%B9%B8%E5%A5%BD%E6%88%91%E4%BB%AC%E8%BF%98%E6%9C%89%E9%9F%B3%E4%B9%90-%E7%AC%AC%E4%B8%89%E6%9C%9F/"/>
    <url>/2022/08/27/%E5%B9%B8%E5%A5%BD%E6%88%91%E4%BB%AC%E8%BF%98%E6%9C%89%E9%9F%B3%E4%B9%90-%E7%AC%AC%E4%B8%89%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v6">前言</h2><p>没更新技术文章，倒是第三期先来了QAQ</p><p>2022年8月27号，不知不觉就大四了呢。开学后希望能做到周更吧！</p><p>今天的专辑是椅子乐团今年的新专，很棒哦！</p><p><img src="http://p2.music.126.net/mBWkuKXTHjme6pV26GNd4w==/109951167604112526.jpg?param=177y177" alt=""></p><h3 id="专辑：Shangri-La-Is-Calling">专辑：Shangri-La Is Calling</h3><p>在 Apple Music 添加音乐到资料库的时候才发现有了新专。一如既往的好听！<br>很值得循环的一张专辑，放着敲代码、学习很适合hh</p><hr><h4 id="Shangri-La-Is-Calling">Shangri-La Is Calling</h4><p>专辑的同名曲</p><p>很有深度的一首，无论是歌词还是编曲</p><p>Run run run away from home<br>逃离 逃离故乡的土地<br>There’s a voice in both my head and my heart<br>有个声音游荡在脑海和心中<br>Shangri-shangri-la is calling<br>香格里拉在召唤<br>Run run away from the dark<br>逃离 逃离绵亘的黑暗<br>I wanna know what reality is all about<br>我想知道 究竟什么才是真实<br>Shangri-shangri-la is calling<br>香格里拉在召唤</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1960129463&amp;auto=1&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>我很喜欢西西弗斯对待挫折和困难的态度，加缪最后一句话写道“应当想象西西弗斯是幸福的”他一直论述着世界是荒诞的，无意义的。但是他又告诉我们要正视荒诞，直面人生的无意义从而本真的活在当下，也许这也是西西弗斯的态度吧，面对挫折不放弃，直视自己拥有的人生，不逃避，不妥协。</strong></p></blockquote><hr><h4 id="轻声细语">轻声细语</h4><p>本专辑里面的唯一一首闽南语歌 也是由吉他手仲颖来唱的<br>我自己是福建泉州闽南人，所以听台湾的闽南语也感到很亲切<br>很舒服很温柔！</p><p>总有人会发现 向南的那一边<br>他将所有的故事都摊开在人拿<br>跟谁人来将心内的坑沟坉乎平<br>他的温柔夹在册橱自由飞</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1960129464&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>椅子的歌，总会包含一种“和解”的感觉。你很好，我也很好。世界没有那么完美，你也不用那么完美；会敏感、会哭泣的你，这样善良的你，我也很喜欢；没有太阳的日子，星星也可以勉强照亮前方的路。慢慢来朋友，我希望你看见他人眼里的光，拥抱自己的伤。</strong></p></blockquote><hr><h4 id="另一个答案">另一个答案</h4><p>整张专辑里我最喜欢的一首<br>单曲循环起来 非常洗脑</p><p>说服我吧<br>另一个答案<br>冷酷本来就是<br>这个世界的常态</p><p>花开后总是<br>等待着凋零<br>所以最高贵的蔷薇<br>总是满身带刺啊</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1960129461&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>亲爱的小孩 不要看到别人的人生都在交卷 就乱写答案</strong></p></blockquote><h3 id="写在最后-v3">写在最后</h3><p>是在乐夏二了解到椅子乐团的。我是福建泉州人，会闽南话，椅子的曲风十分的舒服啊qwq</p><p><img src="https://inews.gtimg.com/newsapp_bt/0/12501311622/641" alt=""></p><p>之后应该会更椅子的另外几张专辑，敬请期待！</p>]]></content>
    
    
    <categories>
      
      <category>Music</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Music</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>幸好我们还有音乐 第二期</title>
    <link href="/2022/08/10/%E5%B9%B8%E5%A5%BD%E6%88%91%E4%BB%AC%E8%BF%98%E6%9C%89%E9%9F%B3%E4%B9%90-%E7%AC%AC%E4%BA%8C%E6%9C%9F/"/>
    <url>/2022/08/10/%E5%B9%B8%E5%A5%BD%E6%88%91%E4%BB%AC%E8%BF%98%E6%9C%89%E9%9F%B3%E4%B9%90-%E7%AC%AC%E4%BA%8C%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v5">前言</h2><p>连载来了！第二期！<br>想了想还是以专辑的形式来分享吧。<br>暂定以每期分享一个专辑，推荐之中我最喜欢的歌曲吧qaq</p><blockquote><p>后记：<br>写完发现网易云的资源没了，所以外链暂时听不了，也许将来网易云能重新获得版权吧</p></blockquote><p><img src="http://p1.music.126.net/bpq4ZMWaRiY6IfCt58N9oA==/1387583682387727.jpg?param=177y177" alt=""></p><h3 id="专辑：丑奴儿">专辑：丑奴儿</h3><p>草东yyds！很多人如果有听过草东的话，基本也就只是听过山海吧<br>这张专辑我认为每首都巨好听！</p><hr><h4 id="等">等</h4><p>这首的前奏太爽了，非常抓耳，我产生了一种</p><p><em><strong>等了你好久，我还是没有等到你，我决定不等了，我要跑起来了</strong></em></p><p>的感觉</p><p>我在等的那部车呢 它会不会又抛锚了<br>我在等的那个人呢 他会不会又不来了</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=411314658&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>“我等的人还没来，你说他是不是放我鸽子了？” “不，亲爱的，凡事要往好处想，说不定他死了呢。”</strong></p></blockquote><hr><h4 id="我们">我们</h4><p>我们在原野上找一面墙<br>我们在标签里找方向<br>我们在废墟般的垃圾里找一块红砖<br>我们在工整的巷子里找家</p><p>我们义无反顾的试着后悔<br>我们声嘶力竭的假装吶喊<br>我们万分惋惜的浪费着<br>用尽一切换来的纸张</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=410802753&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>在桂林航天工业学院图书馆2楼上自习的女生，如果你的手机铃声是这首，那么，我是那个上个学期期末一直坐在你对面的那个男生。</strong><br>是呢，喜欢的话为什么不说明白呢，应该有什么忌惮吧，那只能遗憾了啊。<br>我们最终也只能是我们，仅仅是我们。</p></blockquote><hr><h4 id="埃玛">埃玛</h4><p>整张专辑里我最喜欢的一首<br>这首的鼓和电吉他配合绝了，副歌一响太舒服了<br>就让不开心消融在摇滚中吧</p><p>歌唱着一种没有深度的语言<br>试着跟着这些虚伪一起改变<br>妳笑着说我所拥有的一切 也都是虚伪<br>妳笑着说我所有的谎言 活不过明天</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=411315634&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>这是我离台湾省青年最近的一次，原来祖国各地的青年们都一个屌样子。我还以为就只有我们这么废。哈哈哈。</strong></p></blockquote><h3 id="写在最后-v2">写在最后</h3><p>2021年10月30日，草东鼓手蔡忆凡自杀去世，年仅26岁。</p><p><img src="https://images.chinatimes.com/newsphoto/2021-10-30/1024/20211030002989.jpg" alt=""></p><p><em>杀了它，顺便杀了我吧，拜托你了 --情歌</em></p><p>或许将来的某一天我也会有绝望的时刻，而我能做的只是尽量不让自己身陷囹圄。</p>]]></content>
    
    
    <categories>
      
      <category>Music</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Music</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>幸好我们还有音乐 第一期</title>
    <link href="/2022/07/19/%E5%B9%B8%E5%A5%BD%E6%88%91%E4%BB%AC%E8%BF%98%E6%9C%89%E9%9F%B3%E4%B9%90-%E7%AC%AC%E4%B8%80%E6%9C%9F/"/>
    <url>/2022/07/19/%E5%B9%B8%E5%A5%BD%E6%88%91%E4%BB%AC%E8%BF%98%E6%9C%89%E9%9F%B3%E4%B9%90-%E7%AC%AC%E4%B8%80%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v4">前言</h2><p>随着一天天的流逝，我越发的肯定自己是一个佛系随缘的拖延症患者。一时兴起搞起的博客没有花时间进行更新，被各种纷杂事物干扰着的心也不能够很好地投入学习。<br>所以向配哥学一手，分享一下最近我在听些什么歌吧~</p><p><img src="http://p1.music.126.net/SNixfEH1B4w_P0mf_hH6UQ==/109951167256445254.jpg?param=177y177" alt=""></p><h3 id="专辑：乌鸦谷-晕晕众生，命命相连-Crow-Valley-It’s-All-Connected">专辑：乌鸦谷 - 晕晕众生，命命相连 Crow Valley - It’s All Connected</h3><p>刺猬乐队是一个很有个性的乐队。<br>这是刺猬今年4月的新专，很刺猬！<br>分享这里面我最喜欢的三首歌吧</p><hr><h4 id="幸好我们还有音乐-It’s-Lucky-We-Still-Got-Music">幸好我们还有音乐 It’s Lucky We Still Got Music</h4><p>以这首歌开篇，这个系列的名字就叫这个吧</p><p>现实已如此决绝 还好有音乐<br>有音乐时我可以 忘掉一切<br>只是彼时此刻 我还会想念<br>望你余生平安 仅此已无愿</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1935880332&amp;auto=1&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>对于部分人而言，听音乐是生理需求！</strong></p></blockquote><hr><h4 id="浪花游：对话上帝的掌纹-A-Spray’s-Trip-Talking-to-the-Palm-Print-of-God">浪花游：对话上帝的掌纹 A Spray’s Trip: Talking to the Palm-Print of God</h4><p>音乐性很好的一首歌，享受就完事了</p><p>停止我的恐惧 在黑夜里穿行<br>它飞跃过山谷 俯冲进茂密的山野丛林<br>徘徊于夜幕 的穹顶繁星</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1935886712&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>停止我的恐惧 在黑夜里穿行 它飞跃过山谷 俯冲进茂密的山野丛林 徘徊于夜幕穹顶繁星 倒倒塌的建筑 战斗致死的痕迹 曾经繁华的都市 如今荒芜一片死寂 蔓延在罪恶集中营地 天啊 人类是疯了吗 妇女儿童都不放 过啊 历史倒退着车轮 碾压伤痛的代价 我不敢相信 谁快去救救她</strong><br>这段是歌曲中没体现在歌词的那部分，刺猬把想要表达的东西体现出来了</p></blockquote><hr><h4 id="期许·静灭之火-Expectation·Quiet-Dying-Tinder">期许·静灭之火 Expectation·Quiet Dying Tinder</h4><p>整张专辑里我最喜欢的一首</p><p>黑白的记忆中 我们生活 曾如此小心翼翼<br>在挣脱了 生活的束缚后 终于走向了自闭</p><p>冲突的 压抑绝望的人间悲喜<br>源自纯粹可怖根深蒂固的 痛与孤寂</p><p>我们要么就去死 要么选择一笑了之<br>亦或是忍耐着等到下一个 黎明上岸时</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1932781392&amp;auto=0&amp;height=66"></iframe><p><strong>分享热评</strong></p><blockquote><p><strong>不避世态炎凉，永远心怀向往。刺猬的歌就是这样，在音乐的共鸣中给你走下去的力量。愿你在刺猬的这首新歌中，能够抽离所有易燃的情绪。待到心火静灭，便是黎明上岸时。</strong></p></blockquote><h3 id="写在最后">写在最后</h3><p>子健的才华横溢，和他不喜欢洗澡，有什么关联吗<br><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxCtDzWhrLM27_wMkwyUEx62ijc0bo_Kr8kA&amp;usqp=CAU" alt=""><br>也许对世俗的不恭和懈怠，不影响对生命的敬仰和思考</p>]]></content>
    
    
    <categories>
      
      <category>Music</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Music</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TP-LINK 2022 提前批二面</title>
    <link href="/2022/06/22/TP-LINK-2022%E6%8F%90%E5%89%8D%E6%89%B9%E4%BA%8C%E9%9D%A2/"/>
    <url>/2022/06/22/TP-LINK-2022%E6%8F%90%E5%89%8D%E6%89%B9%E4%BA%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="内容">内容</h2><h3 id="提问">提问</h3><h4 id="学习成绩">学习成绩</h4><p>问了专业人数和成绩排名</p><h4 id="前端的难点在哪">前端的难点在哪</h4><p>我回答是好看又好用</p><h4 id="项目经历">项目经历</h4><p>和几个人一起完成，主要负责些什么，收获了什么</p><h4 id="计算计网络知识薄弱">计算计网络知识薄弱</h4><p>重新问了一面问到的问题，幸好我有准备，回答上来了</p><h4 id="页面卡顿要如何优化">页面卡顿要如何优化</h4><p>看看别人博客的总结<br><a href="https://godbasin.github.io/2022/06/04/front-end-performance-no-responding/">前端性能优化-卡顿篇</a></p><h4 id="http的通信协议">http的通信协议</h4><p>是指TCP/IP协议吗？问题我也不太记得了<br><a href="https://vue3js.cn/interview/http/TCP_IP.html">如何理解TCP/IP协议</a></p><h4 id="页面渲染的流程"><a href="https://vue3js.cn/interview/http/after_url.html#%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93">页面渲染的流程</a></h4><h4 id="聊聊socket">聊聊socket</h4><p>提到了后端，我只说听过socket，还没去搞明白</p><h4 id="快速排序和冒泡排序"><a href="https://blog.csdn.net/LANGZI7758521/article/details/99703114">快速排序和冒泡排序</a></h4><p>把快排搞忘了，可惜</p><h4 id="github有哪些东西">github有哪些东西</h4><p>项目、github pages</p><h4 id="有什么兴趣爱好">有什么兴趣爱好</h4><p>音乐（livehouse、摇滚）、打游戏（moba、fps、独立游戏）</p><h4 id="籍贯">籍贯</h4><p>福建泉州</p><h3 id="反问">反问</h3><h4 id="这是终面吗">这是终面吗</h4><p>是</p><h4 id="面试有哪些部分能做得更好些">面试有哪些部分能做得更好些</h4><p>基础知识不够扎实</p>]]></content>
    
    
    <categories>
      
      <category>面经</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TP-LINK 2022 提前批一面</title>
    <link href="/2022/06/20/TP-LINK-2022%E6%8F%90%E5%89%8D%E6%89%B9%E4%B8%80%E9%9D%A2/"/>
    <url>/2022/06/20/TP-LINK-2022%E6%8F%90%E5%89%8D%E6%89%B9%E4%B8%80%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="内容-v3">内容</h2><h3 id="计算机网络-v2">计算机网络</h3><h4 id="输入一个网址，敲下回车后发生了什么"><a href="https://vue3js.cn/interview/http/after_url.html">输入一个网址，敲下回车后发生了什么</a></h4><h4 id="如何理解-UDP-和-TCP"><a href="https://vue3js.cn/interview/http/UDP_TCP.html">如何理解 UDP 和 TCP</a></h4><h3 id="JS">JS</h3><h4 id="和-的区别"><a href="https://vue3js.cn/interview/JavaScript/==%20_===.html">== 和 === 的区别</a></h4><h4 id="深拷贝浅拷贝的区别"><a href="https://vue3js.cn/interview/JavaScript/copy.html">深拷贝浅拷贝的区别</a></h4><h4 id="对闭包的理解"><a href="https://vue3js.cn/interview/JavaScript/closure.html">对闭包的理解</a></h4><h3 id="React-v2">React</h3><h4 id="React中的key有什么作用"><a href="https://vue3js.cn/interview/React/key.html">React中的key有什么作用</a></h4><h3 id="CSS-v2">CSS</h3><h4 id="display-none-与-visibility-hidden-的区别"><a href="https://vue3js.cn/interview/css/hide_attributes.html">display:none 与 visibility:hidden 的区别</a></h4><h4 id="图片的-alt-与-title">图片的 alt 与 title</h4><ul><li>alt<br>给搜索引擎识别，在图像无法显示时的替代文本</li><li>title<br>关于元素的注释信息，主要是给用户解读。当鼠标放到文字或是图片上时有title文字显示</li></ul><h2 id="聊天">聊天</h2><p>自我介绍开局，主要就项目经历、学校学习展开来聊，具体聊了啥不太记得了（以后一定尽快记录0.0）</p>]]></content>
    
    
    <categories>
      
      <category>面经</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署项目导引</title>
    <link href="/2022/06/17/%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%BC%95/"/>
    <url>/2022/06/17/%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%BC%95/</url>
    
    <content type="html"><![CDATA[<p>这里就把所有部署到github page上的项目链接放在这，以便查看。</p><ul><li><p><a href="https://hower454516977.github.io/Snake">贪吃蛇</a></p></li><li><p><a href="https://hower454516977.github.io/Retodo/">Todoist</a></p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Retodo - 用 React 写一个自己的 Todoist（下）</title>
    <link href="/2022/05/29/Retodo-%E7%94%A8React%E5%86%99%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84Todoist%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <url>/2022/05/29/Retodo-%E7%94%A8React%E5%86%99%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84Todoist%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v2">前言</h2><p>点这里 → <a href="https://hower454516977.github.io/Retodo/">Hower’s Todoist⚡</a></p>]]></content>
    
    
    <categories>
      
      <category>Todoist</category>
      
    </categories>
    
    
    <tags>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Retodo - 用 React 写一个自己的 Todoist（上）</title>
    <link href="/2022/05/29/Retodo-%E7%94%A8React%E5%86%99%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84Todoist%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <url>/2022/05/29/Retodo-%E7%94%A8React%E5%86%99%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84Todoist%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>点这里 → <a href="https://hower454516977.github.io/Retodo/">Hower’s Todoist⚡</a></p><p>拥有自己的Todoist真的是太coooooool了（虽然没有什么用hh）</p><p>这篇文章主要讲一下整个的流程吧，算是对这个项目的一个总结，也能给初学者提供一些思路吧（如果有人能看到的话）</p><h3 id="如何创建一个-React-项目">如何创建一个 React 项目</h3><h4 id="使用官方脚手架creact-react-app">使用官方脚手架creact-react-app</h4><p>在一个文件夹内，右键选择在终端中打开</p><p>首先通过npm全局安装 create-react-app</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install -g create-react-app<br></code></pre></td></tr></table></figure><p>然后使用 create-react-app 命令来创建项目</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">create-react-app &lt;项目名&gt;<br></code></pre></td></tr></table></figure><p>就ok啦！</p><h3 id="如何将-React-项目上传到-Github">如何将 React 项目上传到 Github</h3><ol><li><p>进入 Github，点击 Repositories，点击New，起个Repository name，建立一个新仓库</p></li><li><p>进入仓库，点击 Code 里面的 SSH ，复制链接</p></li><li><p>到刚刚生成的 React 项目旁边，右键选择在终端中打开，输入</p></li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git clone 刚刚复制的链接<br></code></pre></td></tr></table></figure><ol start="4"><li><p>把 React 项目文件拖入本地仓库</p></li><li><p>进入本地仓库，右键选择在终端中打开，输入</p></li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git add .<br>git commit -m &#x27;备注信息&#x27;<br>git push<br></code></pre></td></tr></table></figure><p>也可以不敲这些代码，用VScode十分的方便哦</p><h3 id="如何将-React-项目部署到自己的-Github-Page-上">如何将 React 项目部署到自己的 Github Page 上</h3><p>我也是查了很多资料才成功上传啊</p><ol><li>安装gh-pages（github page一般用master和gh-pages分支部署）</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install gh-pages --save-dev<br></code></pre></td></tr></table></figure><ol start="2"><li>修改 package.json</li></ol><ul><li>加上 “homepage”: “<a href="https://hower454516977.github.io/Retodo">https://hower454516977.github.io/Retodo</a>” 就是你的github page加上仓库名</li><li>在&quot;scripts&quot;里加上两条<br>“predeploy”: “npm run build”,<br>“deploy”: “gh-pages -d build -r <a href="https://github.com/Hower454516977/Retodo.git">https://github.com/Hower454516977/Retodo.git</a> -b gh-pages”</li></ul><ol start="3"><li>推送到 github</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm run build //将react项目打包编译成静态资源放在build目录下<br>npm run deploy //将build下面内容传送到github上<br></code></pre></td></tr></table></figure><p>之后如果进行内容更新，通过 npm run deploy 更新到网页上</p><h2 id="总结">总结</h2><p>主要是巩固下一些 git 指令吧，争取以后初始化项目就可以摆脱查资料，自己就可以流畅地敲出来hh<br>下一篇博客就更新完整的 Todoist 项目吧</p>]]></content>
    
    
    <categories>
      
      <category>Todoist</category>
      
    </categories>
    
    
    <tags>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某小厂线下面试</title>
    <link href="/2022/05/26/%E6%9F%90%E5%B0%8F%E5%8E%82%E7%BA%BF%E4%B8%8B%E9%9D%A2%E8%AF%95/"/>
    <url>/2022/05/26/%E6%9F%90%E5%B0%8F%E5%8E%82%E7%BA%BF%E4%B8%8B%E9%9D%A2%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v7">前言</h2><p>5月23日下午，我坐了一个多小时的地铁到了武侯区进行了人生中的线下面试。</p><h2 id="内容-v4">内容</h2><p>面试官好像对我是大三感到有点小惊讶，可能是因为招的更多是大四的毕业生，实习之后直接转正的吧。（那我直接安慰自己一手，如果挂掉有可能是因为这个原因hh）</p><h3 id="React-v3">React</h3><p>面试官问我做过什么项目，我就说做了React后台开发（但是我是写页面，所以主要还是HTML和tailwindCSS）。<br>问了React的生命周期，看我答不上来就没再继续为难我了hh</p><h4 id="React的生命周期"><a href="https://vue3js.cn/interview/React/life%20cycle.html">React的生命周期</a></h4><ul><li>创建阶段</li><li>更新阶段</li><li>卸载阶段</li></ul><h3 id="JavaScript-v2">JavaScript</h3><p>本来以为小厂会以HTML和CSS为主，没想到HTML一个都没问，倒是问了巨多JS，人麻了QAQ</p><h4 id="防抖和节流"><a href="https://vue3js.cn/interview/JavaScript/debounce_throttle.html">防抖和节流</a></h4><ul><li>节流: n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效</li><li>防抖: n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时</li></ul><h4 id="事件循环-v2"><a href="https://vue3js.cn/interview/JavaScript/event_loop.html">事件循环</a></h4><p>JavaScript是一门单线程的语言，意味着同一时间内只能做一件事，但是这并不意味着单线程就是阻塞，而实现单线程非阻塞的方法就是事件循环</p><h4 id="typeof-与-instanceof-区别"><a href="https://vue3js.cn/interview/JavaScript/typeof_instanceof.html">typeof 与 instanceof 区别</a></h4><ul><li>typeof会返回一个变量的基本类型，instanceof返回的是一个布尔值</li><li>instanceof 可以准确地判断复杂引用数据类型，但是不能正确判断基础数据类型</li><li>而typeof 也存在弊端，它虽然可以判断基础数据类型（null 除外），但是引用数据类型中，除了function 类型以外，其他的也无法判断</li></ul><h4 id="闭包"><a href="https://vue3js.cn/interview/JavaScript/closure.html">闭包</a></h4><p>一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）</p><p>也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域</p><p>在 JavaScript中，每当创建一个函数，闭包就会在函数创建的同时被创建出来，作为函数内部与外部连接起来的一座桥梁</p><h4 id="原型和原型链"><a href="https://vue3js.cn/interview/JavaScript/prototype.html">原型和原型链</a></h4><p>JavaScript 常被描述为一种基于原型的语言——每个对象拥有一个原型对象<br>当试图访问一个对象的属性时，它不仅仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象的原型的原型，依次层层向上搜索，直到找到一个名字匹配的属性或到达原型链的末尾<br>准确地说，这些属性和方法定义在Object的构造器函数（constructor functions）之上的prototype属性上，而非实例对象本身</p><p>原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为原型链 (prototype chain)，它解释了为何一个对象会拥有定义在其他对象中的属性和方法<br>在对象实例和它的构造器之间建立一个链接（它是__proto__属性，是从构造函数的prototype属性派生的），之后通过上溯原型链，在构造器中找到这些属性和方法</p><h3 id="CSS-v3">CSS</h3><h4 id="元素水平垂直居中"><a href="https://vue3js.cn/interview/css/center.html">元素水平垂直居中</a></h4><ul><li>利用定位+margin:auto</li><li>利用定位+margin:负值</li><li>利用定位+transform</li><li>table布局</li><li>flex布局</li><li>grid布局</li></ul><h4 id="flexbox"><a href="https://vue3js.cn/interview/css/flexbox.html">flexbox</a></h4><p>容器中默认存在两条轴，主轴和交叉轴，呈90度关系。项目默认沿主轴排列，通过flex-direction来决定主轴的方向。每根轴都有起点和终点，这对于元素的对齐非常重要</p><p>容器属性有：</p><ul><li>flex-direction</li><li>flex-wrap</li><li>flex-flow</li><li>justify-content</li><li>align-items</li><li>align-content</li></ul><h4 id="盒子模型"><a href="https://vue3js.cn/interview/css/box.html">盒子模型</a></h4><p><img src="https://static.vue-js.com/976789a0-8f9b-11eb-85f6-6fac77c0c9b3.png" alt="W3C 标准盒子模型" title="W3C 标准盒子模型"><br><img src="https://static.vue-js.com/cfbb3ef0-8f9b-11eb-ab90-d9ae814b240d.png" alt="IE 怪异盒子模型" title="IE 怪异盒子模型"></p><h2 id="总结-v3">总结</h2><p>线下面试的体验还是很奇妙的，没有想象中那么的紧张，有一种要与社会接轨的奇妙感觉。<br>还是挺不错的一次体验吧，多送几次人头吧，希望自己能够快快成长吧⚡</p>]]></content>
    
    
    <categories>
      
      <category>面经</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人生中第一次面试</title>
    <link href="/2022/05/24/%E4%BA%BA%E7%94%9F%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95/"/>
    <url>/2022/05/24/%E4%BA%BA%E7%94%9F%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v3">前言</h2><p>5.20的事拖到了今天才来写😉<br>梦回高中互问理综，第一次面试给了最好的面试官，感谢宇航哥的面试😗<br>加油，前端人😄</p><h2 id="内容-v2">内容</h2><h3 id="计算机网络">计算机网络</h3><h4 id="HTTP协议"><a href="https://vue3js.cn/interview/http/HTTP_HTTPS.html">HTTP协议</a></h4><p>HTTP (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范</p><h4 id="HTTP1-0-1-1-2-0-的区别"><a href="https://vue3js.cn/interview/http/1.0_1.1_2.0.html">HTTP1.0/1.1/2.0 的区别</a></h4><p>HTTP1.0：<br>浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个TCP连接</p><p>HTTP1.1：<br>引入了持久连接，即TCP连接默认不关闭，可以被多个请求复用</p><p>HTTP2.0：<br>采用二进制格式而非文本格式</p><h4 id="TCP的三次握手"><a href="https://vue3js.cn/interview/http/handshakes_waves.html">TCP的三次握手</a></h4><p>三次握手（Three-way Handshake）其实就是指建立一个TCP连接时，需要客户端和服务器总共发送3个包</p><p>主要作用就是为了确认双方的接收能力和发送能力是否正常、指定自己的初始化序列号为后面的可靠性传送做准备</p><p>过程如下：</p><ul><li>第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN©，此时客户端处于 SYN_SENT 状态</li><li>第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，为了确认客户端的 SYN，将客户端的 ISN+1作为ACK的值，此时服务器处于 SYN_RCVD 的状态</li><li>第三次握手：客户端收到 SYN 报文之后，会发送一个 ACK 报文，值为服务器的ISN+1。此时客户端处于 ESTABLISHED 状态。服务器收到 ACK 报文之后，也处于 ESTABLISHED 状态，此时，双方已建立起了连接</li></ul><h4 id="网络安全"><a href="https://michaelyuhe.github.io/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/">网络安全</a></h4><p>跨站脚本攻击（Cross-site scripting，XSS）<br>是一种安全漏洞，攻击者可以利用这种漏洞在网站上注入恶意的客户端代码。</p><p>CSRF（Cross-site request forgery）跨站请求伪造：<br>攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。</p><h3 id="CSS">CSS</h3><h4 id="position"><a href="https://www.runoob.com/css/css-positioning.html">position</a></h4><p>默认 static<br>absolute、relative、fixed、sticky</p><h4 id="flex"><a href="https://vue3js.cn/interview/css/flexbox.html">flex</a></h4><h4 id="元素居中的方法"><a href="https://vue3js.cn/interview/css/center.html">元素居中的方法</a></h4><h3 id="JavaScript">JavaScript</h3><h4 id="数据类型"><a href="https://vue3js.cn/interview/JavaScript/data_type.html">数据类型</a></h4><h4 id="防抖节流"><a href="https://vue3js.cn/interview/JavaScript/debounce_throttle.html">防抖节流</a></h4><h4 id="Promise"><a href="https://www.runoob.com/js/js-promise.html">Promise</a></h4><h4 id="事件循环"><a href="https://vue3js.cn/interview/JavaScript/event_loop.html">事件循环</a></h4><h4 id="0-1-0-2-0-3"><a href="https://vue3js.cn/interview/JavaScript/loss_accuracy.html">0.1+0.2=0.3?</a></h4><h4 id="TS"><a href="https://vue3js.cn/interview/typescript/typescript_javascript.html">TS</a></h4><h4 id="原型链"><a href="https://vue3js.cn/interview/JavaScript/prototype.html">原型链</a></h4><h4 id="map和forEach的区别"><a href="https://vue3js.cn/interview/JavaScript/array_api.html#%E5%9B%9B%E3%80%81%E8%BF%AD%E4%BB%A3%E6%96%B9%E6%B3%95">map和forEach的区别</a></h4><h3 id="React">React</h3><h4 id="钩子用过哪些"><a href="https://vue3js.cn/interview/React/React%20Hooks.html">钩子用过哪些</a></h4><h4 id="组件通信"><a href="https://vue3js.cn/interview/React/communication.html">组件通信</a></h4><h4 id="引入CSS的方式"><a href="https://vue3js.cn/interview/React/import%20css.html">引入CSS的方式</a></h4><h3 id="工程化">工程化</h3><h4 id="Webpack"><a href="https://vue3js.cn/interview/webpack/webpack.html">Webpack</a></h4><h2 id="算法">算法</h2><h4 id="两数之和">两数之和</h4><p>哈希表<br>set() has() get()<br><a href="https://leetcode.cn/problems/two-sum/">leetcode 1.两数之和</a></p><h4 id="有效的括号">有效的括号</h4><p>栈<br><a href="https://leetcode.cn/problems/valid-parentheses/">leetcode 20.有效的括号</a></p><h4 id="反转链表">反转链表</h4><p>链表<br><a href="https://leetcode.cn/problems/reverse-linked-list/">leetcode 206.反转链表</a></p><h4 id="用-setTimeout-实现-setInterval">用 setTimeout 实现 setInterval</h4><p><a href="https://zhuanlan.zhihu.com/p/87595858#:~:text=%E7%94%A8%20setTimeout%20%E5%AE%9E%E7%8E%B0%20setInterval%20%E8%80%8C%20setTimeout%20%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%20setInterval,%7D%20%E4%B8%8A%E9%9D%A2%E7%9A%84%20repeat%20%E6%8E%A5%E5%8F%97%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%20func%20%E6%98%AF%E8%A6%81%E4%BB%A5%E9%97%B4%E9%9A%94%E6%97%B6%E9%97%B4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%20ms%20%E4%BB%A3%E8%A1%A8%E9%97%B4%E9%9A%94%E7%9A%84%E6%AF%AB%E7%A7%92%E6%95%B0%E3%80%82">链接</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">mySetInterval</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">timeID</span> = <span class="hljs-literal">null</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> = <span class="hljs-literal">null</span><br>&#125;<br><br>mySetInterval.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">repeat</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">func, ms</span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> === <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> = func<br>  &#125;<br><br>  <span class="hljs-comment">// 确保一个 mySetInterval 实例只能重复一个 func</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> !== func) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">timeID</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">func</span>()<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">repeat</span>(func, ms)<br>  &#125;, ms)<br>&#125;<br><br>mySetInterval.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">clear</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-built_in">clearTimeout</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timeID</span>)<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">a</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;a&#x27;</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">b</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;b&#x27;</span>)<br><br><span class="hljs-keyword">const</span> timer = <span class="hljs-keyword">new</span> <span class="hljs-title function_">mySetInterval</span>()<br><br>timer.<span class="hljs-title function_">repeat</span>(a, <span class="hljs-number">1000</span>)<br>timer.<span class="hljs-title function_">repeat</span>(b, <span class="hljs-number">1000</span>) <span class="hljs-comment">// 不会定时执行 b</span><br></code></pre></td></tr></table></figure><h2 id="总结-v2">总结</h2><p>这次面下来的感觉就是感觉自己很恶心，好多简单的知识点，甚至做过的算法题，竟然能够一片空白💔<br>深深地意识到基础知识太薄弱了，如果秋招想冲大厂，将来的几个月一定要改变自己好好努力了⚡<br>清楚了都有哪些内容要去学习，接下来就是要把一个个比较难理解的知识搞清楚，加油！💪</p>]]></content>
    
    
    <categories>
      
      <category>面经</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用三大件实现“贪吃蛇”小游戏</title>
    <link href="/2022/05/17/%E7%94%A8%E4%B8%89%E5%A4%A7%E4%BB%B6%E5%AE%9E%E7%8E%B0%E2%80%9C%E8%B4%AA%E5%90%83%E8%9B%87%E2%80%9D%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <url>/2022/05/17/%E7%94%A8%E4%B8%89%E5%A4%A7%E4%BB%B6%E5%AE%9E%E7%8E%B0%E2%80%9C%E8%B4%AA%E5%90%83%E8%9B%87%E2%80%9D%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v8">前言</h2><p>作为一个前端小白，在b站学习完pink老师讲的动画原理之后，我脑中就有了写一个小游戏的想法。然后发现贪吃蛇好像还挺好实现的，然后就动手开始试着写了一下。<br><a href="https://hower454516977.github.io/Snake">点击试玩⚡</a></p><h2 id="实现过程">实现过程</h2><h3 id="用-HTML-和-CSS-构建场景和物件">用 HTML 和 CSS 构建场景和物件</h3><h4 id="HTML-部分">HTML 部分</h4><p>我的做法就是让整个页面由div标签构成，场地是个div，目标物是个div，蛇头和蛇身都是由一个个的div构成。我加入了障碍物的设定，就是每过一段时间就会在地图上生成一个障碍物。所有的蛇身会被放入类名为allBody的div中，所有的障碍物会被放入类名为allBarrier的div中。<br>完整 HTML 代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Snake<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./snake.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wall&quot;</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;remind&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ground&quot;</span>&gt;</span> <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;target&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;allBody&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;allBarrier&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./snake.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="CSS-部分">CSS 部分</h4><p>墙，就是除了整个页面除去内部场地的部分，所以给墙加上绝对定位，给提示和场地加上相对定位。而其他部分在场地内，加上绝对定位。<br>完整 CSS 代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs javascript">.<span class="hljs-property">wall</span> &#123;<br>  <span class="hljs-attr">position</span>: absolute;<br>  <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">100</span>%;<br>  <span class="hljs-attr">height</span>: <span class="hljs-number">100</span>%;<br>  background-<span class="hljs-attr">color</span>: greenyellow;<br>&#125;<br><br>.<span class="hljs-property">remind</span> &#123;<br>  <span class="hljs-attr">position</span>: relative;<br>  <span class="hljs-attr">left</span>: 0px;<br>  <span class="hljs-attr">top</span>: 0px;<br>  <span class="hljs-attr">width</span>: 50px;<br>  <span class="hljs-attr">height</span>: 50px;<br>  background-<span class="hljs-attr">color</span>: pink;<br>&#125;<br><br>.<span class="hljs-property">ground</span> &#123;<br>  <span class="hljs-attr">position</span>: relative;<br>  <span class="hljs-attr">left</span>: 50px;<br>  <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">height</span>: <span class="hljs-number">0</span>;<br>  background-<span class="hljs-attr">color</span>: white;<br>&#125;<br><br>.<span class="hljs-property">head</span> &#123;<br>  <span class="hljs-attr">position</span>: absolute;<br>  <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">width</span>: 50px;<br>  <span class="hljs-attr">height</span>: 50px;<br>  background-<span class="hljs-attr">color</span>: blue;<br>&#125;<br><br>.<span class="hljs-property">body</span> &#123;<br>  <span class="hljs-attr">position</span>: absolute;<br>  <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">width</span>: 50px;<br>  <span class="hljs-attr">height</span>: 50px;<br>  background-<span class="hljs-attr">color</span>: aquamarine;<br>&#125;<br><br>.<span class="hljs-property">barrier</span> &#123;<br>  <span class="hljs-attr">position</span>: absolute;<br>  <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">width</span>: 50px;<br>  <span class="hljs-attr">height</span>: 50px;<br>  background-<span class="hljs-attr">color</span>: gray;<br>&#125;<br><br>.<span class="hljs-property">target</span> &#123;<br>  <span class="hljs-attr">position</span>: absolute;<br>  <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">width</span>: 50px;<br>  <span class="hljs-attr">height</span>: 50px;<br>  background-<span class="hljs-attr">color</span>: red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="用-JavaScript-控制各种功能的实现">用 JavaScript 控制各种功能的实现</h3><h4 id="声明">声明</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//获取对应的div</span><br><span class="hljs-keyword">let</span> wall = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.wall&#x27;</span>);<br><span class="hljs-keyword">let</span> remind = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.remind&#x27;</span>);<br><span class="hljs-keyword">let</span> ground = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.ground&#x27;</span>);<br><span class="hljs-keyword">let</span> target = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.target&#x27;</span>);<br><span class="hljs-keyword">let</span> head = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.head&#x27;</span>);<br><span class="hljs-keyword">let</span> allBody = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.allBody&#x27;</span>);<br><span class="hljs-keyword">let</span> allBarrier = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.allBarrier&#x27;</span>);<br><span class="hljs-comment">//通过createElement的方式实现newBody和newBarrier的生成</span><br><span class="hljs-keyword">let</span> newBody = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br><span class="hljs-keyword">let</span> newBarrier = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br><span class="hljs-comment">//将所有蛇身和障碍物选取来进行操作</span><br><span class="hljs-keyword">let</span> body = allBody.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.body&#x27;</span>);<br><span class="hljs-keyword">let</span> barrier = allBarrier.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br><span class="hljs-comment">//头，身，目标物，障碍物的位置</span><br><span class="hljs-keyword">let</span> headX = <span class="hljs-title function_">randomX</span>();<br><span class="hljs-keyword">let</span> headY = <span class="hljs-title function_">randomY</span>();<br><span class="hljs-keyword">let</span> bodyX = head.<span class="hljs-property">offsetLeft</span>;<br><span class="hljs-keyword">let</span> bodyY = head.<span class="hljs-property">offsetTop</span>;<br><span class="hljs-keyword">let</span> targetX = <span class="hljs-title function_">randomX</span>();<br><span class="hljs-keyword">let</span> targetY = <span class="hljs-title function_">randomY</span>();<br><span class="hljs-keyword">let</span> barrierX = <span class="hljs-title function_">randomX</span>();<br><span class="hljs-keyword">let</span> barrierY = <span class="hljs-title function_">randomY</span>();<br><span class="hljs-comment">//用来记录数据(吃到的个数和使用的时间)，通过公式得出评分</span><br><span class="hljs-keyword">let</span> time = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> times = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> score = <span class="hljs-number">0</span>;<br><span class="hljs-comment">//用来控制按下按钮，即开始游戏后才开始计时</span><br><span class="hljs-keyword">let</span> flag = <span class="hljs-literal">true</span>;<br><span class="hljs-comment">//用来控制有蛇身时，不能直接往反方向走</span><br><span class="hljs-keyword">let</span> turnUp = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">let</span> turnLeft = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">let</span> turnDown = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">let</span> turnRight = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">let</span> single = <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><h4 id="随机生成函数得到随机值">随机生成函数得到随机值</h4><p>随机获取 a~b 之间的一个整数：Math.round(Math.random() * ( b - a ) + a);<br>我们要生成是从场所内出现并且间隔为50的随机值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//随机函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">randomX</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (wall.<span class="hljs-property">offsetWidth</span> / <span class="hljs-number">50</span> - <span class="hljs-number">4</span>) + <span class="hljs-number">1</span>) * <span class="hljs-number">50</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">randomY</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (wall.<span class="hljs-property">offsetHeight</span> / <span class="hljs-number">50</span> - <span class="hljs-number">4</span>) + <span class="hljs-number">1</span>) * <span class="hljs-number">50</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="蛇头的生成和控制">蛇头的生成和控制</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//生成函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setHead</span>(<span class="hljs-params"></span>) &#123;<br>  headX = <span class="hljs-title function_">randomX</span>();<br>  headY = <span class="hljs-title function_">randomY</span>();<br>  head.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = headX + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  head.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = headY + <span class="hljs-string">&#x27;px&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment">//控制函数：</span><br><span class="hljs-comment">//当接收到键盘指令后进行go函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">go</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-title function_">turn</span>(dir);<br>  <span class="hljs-built_in">clearInterval</span>(head.<span class="hljs-property">timer</span>);<br>  <span class="hljs-title function_">judge</span>(dir);<br>  head.<span class="hljs-property">timer</span> = <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">judge</span>(dir);<br>  &#125;, <span class="hljs-number">100</span>);<br>&#125;<br><span class="hljs-comment">//判断方向来控制蛇头的方向</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">judge</span>(<span class="hljs-params">dir</span>) &#123;<br>  body = allBody.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.body&#x27;</span>);<br>  barrier = allBarrier.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br>  <span class="hljs-title function_">followHead</span>();<br>  <span class="hljs-keyword">switch</span> (dir) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;up&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;down&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>  &#125;<br>  <span class="hljs-title function_">isGetTarget</span>(dir);<br>  <span class="hljs-title function_">isDead</span>(dir);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="障碍物的生成">障碍物的生成</h4><p>在满足不会生成到蛇身、目标物和蛇头附近200px位置的情况下生成障碍物</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">setBarrier</span>(<span class="hljs-params"></span>) &#123;<br>  newBarrier = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br>  allBarrier.<span class="hljs-title function_">appendChild</span>(newBarrier);<br>  newBarrier.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;barrier&#x27;</span>);<br>  barrierX = <span class="hljs-title function_">randomX</span>();<br>  barrierY = <span class="hljs-title function_">randomY</span>();<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; body.<span class="hljs-property">length</span>; i++) &#123;<br>    body = allBody.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.body&#x27;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; barrier.<span class="hljs-property">length</span>; j++) &#123;<br>      barrier = allBarrier.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br>      <span class="hljs-keyword">if</span> (barrierX === body[i].<span class="hljs-property">offsetLeft</span> &amp;&amp; barrierY === body[i].<span class="hljs-property">offsetTop</span> ||<br>        barrierX === barrier[j].<span class="hljs-property">offsetLeft</span> &amp;&amp; barrierY === barrier[j].<span class="hljs-property">offsetTop</span> ||<br>        <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>((barrierX - head.<span class="hljs-property">offsetLeft</span>)) &lt; <span class="hljs-number">200</span> ||<br>        <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>((barrierX - head.<span class="hljs-property">offsetLeft</span>)) &lt; <span class="hljs-number">200</span> ||<br>        barrierX === target.<span class="hljs-property">offsetLeft</span> &amp;&amp; barrierY === target.<span class="hljs-property">offsetTop</span>) &#123;<br>        barrierX = <span class="hljs-title function_">randomX</span>();<br>        barrierY = <span class="hljs-title function_">randomY</span>();<br>        i = <span class="hljs-number">0</span>;<br>        j = <span class="hljs-number">0</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  newBarrier.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = barrierX + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  newBarrier.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = barrierY + <span class="hljs-string">&#x27;px&#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="目标物的生成及被吃到后的重置">目标物的生成及被吃到后的重置</h4><p>在满足不会生成到蛇身、障碍物位置的情况下生成目标物</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">setTarget</span>(<span class="hljs-params"></span>) &#123;<br>  targetX = <span class="hljs-title function_">randomX</span>();<br>  targetY = <span class="hljs-title function_">randomY</span>();<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; body.<span class="hljs-property">length</span>; i++) &#123;<br>    body = allBody.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.body&#x27;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; barrier.<span class="hljs-property">length</span>; j++) &#123;<br>      barrier = allBarrier.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br>      <span class="hljs-keyword">if</span> (targetX === body[i].<span class="hljs-property">offsetLeft</span> &amp;&amp; targetY === body[i].<span class="hljs-property">offsetTop</span> ||<br>        targetX === barrier[j].<span class="hljs-property">offsetLeft</span> &amp;&amp; targetY === barrier[j].<span class="hljs-property">offsetTop</span>) &#123;<br>        targetX = <span class="hljs-title function_">randomX</span>();<br>        targetY = <span class="hljs-title function_">randomY</span>();<br>        i = <span class="hljs-number">0</span>;<br>        j = <span class="hljs-number">0</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  target.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = targetX + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  target.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = targetY + <span class="hljs-string">&#x27;px&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isGetTarget</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-keyword">if</span> (targetX === head.<span class="hljs-property">offsetLeft</span> &amp;&amp; targetY === head.<span class="hljs-property">offsetTop</span>) &#123;<br>    single = <span class="hljs-literal">false</span>; <span class="hljs-comment">//吃到过目标物后，拥有蛇身，之后不能瞬间反向</span><br>    times++;<br>    <span class="hljs-title function_">setTarget</span>();<br>    <span class="hljs-title function_">setBody</span>(dir);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="吃到目标物后蛇身的增长">吃到目标物后蛇身的增长</h4><p>吃到目标物时根据此时的方向来决定新蛇身的位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">setBody</span>(<span class="hljs-params">dir</span>) &#123;<br>  newBody = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br>  allBody.<span class="hljs-title function_">appendChild</span>(newBody);<br>  newBody.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;body&#x27;</span>);<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;left&#x27;</span>) &#123;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;right&#x27;</span>) &#123;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;up&#x27;</span>) &#123;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;down&#x27;</span>) &#123;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    newBody.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="控制蛇身跟着蛇头走">控制蛇身跟着蛇头走</h4><p>核心代码，通过这种方式来控制蛇身的走动</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">followHead</span>(<span class="hljs-params"></span>) &#123;<br>  body = allBody.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.body&#x27;</span>);<br>  <span class="hljs-keyword">if</span> (body.<span class="hljs-property">length</span> !== <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = body.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>      <span class="hljs-keyword">if</span> (i === <span class="hljs-number">0</span>) &#123;<br>        body[i].<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>        body[i].<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>      &#125;<br>      <span class="hljs-keyword">else</span> &#123;<br>        body[i].<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = body[i - <span class="hljs-number">1</span>].<span class="hljs-property">offsetLeft</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>        body[i].<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = body[i - <span class="hljs-number">1</span>].<span class="hljs-property">offsetTop</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="判断是否死亡">判断是否死亡</h4><p>三种死亡情况：撞墙死、撞身死和撞障碍物死</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isDead</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-comment">//撞墙死</span><br>  <span class="hljs-keyword">switch</span> (dir) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;up&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetTop</span> &lt; <span class="hljs-number">0</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetLeft</span> &lt; <span class="hljs-number">0</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;down&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetTop</span> &gt; ground.<span class="hljs-property">offsetHeight</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetLeft</span> &gt; ground.<span class="hljs-property">offsetWidth</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>  &#125;<br>  <span class="hljs-comment">//撞身死</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; body.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span> (body[i].<span class="hljs-property">offsetLeft</span> === head.<span class="hljs-property">offsetLeft</span> &amp;&amp;<br>      body[i].<span class="hljs-property">offsetTop</span> === head.<span class="hljs-property">offsetTop</span>)<br>      <span class="hljs-title function_">gameOver</span>();<br>  &#125;<br>  <span class="hljs-comment">//撞障碍物死</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; barrier.<span class="hljs-property">length</span>; j++) &#123;<br>    <span class="hljs-keyword">if</span> (barrier[j].<span class="hljs-property">offsetLeft</span> === head.<span class="hljs-property">offsetLeft</span> &amp;&amp;<br>      barrier[j].<span class="hljs-property">offsetTop</span> === head.<span class="hljs-property">offsetTop</span>)<br>      <span class="hljs-title function_">gameOver</span>();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="死亡后的结算和重启">死亡后的结算和重启</h4><p>这是我的计分公式：score = Math.round(times * 3.5 * (1 + 2 / (time + 1)))<br>欢迎提出更合理的计分公式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">gameOver</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-built_in">clearInterval</span>(head.<span class="hljs-property">timer</span>);<br>  score = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(times * <span class="hljs-number">3.5</span> * (<span class="hljs-number">1</span> + <span class="hljs-number">2</span> / (time + <span class="hljs-number">1</span>)));<br>  <span class="hljs-keyword">if</span> (score &gt; <span class="hljs-number">100</span>) score = <span class="hljs-number">100</span>;<br>  <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;本次你坚持了&#x27;</span> + time + <span class="hljs-string">&#x27;秒，吃到了&#x27;</span> + times + <span class="hljs-string">&#x27;次红方块，</span><br><span class="hljs-string">  系统评分为&#x27;</span> + score + <span class="hljs-string">&#x27;分，再来一次吧~&#x27;</span>);<br>  <span class="hljs-title function_">setHead</span>();<br>  <span class="hljs-title function_">setTarget</span>();<br>  <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-title function_">reload</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="如何控制有蛇身时，不能直接往反方向走">如何控制有蛇身时，不能直接往反方向走</h4><p>排己思想，先将所有方向都设置为false，然后将选定方向的反方向设为false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">turn</span>(<span class="hljs-params">dir</span>) &#123;<br>  turnUp = <span class="hljs-literal">true</span>;<br>  turnLeft = <span class="hljs-literal">true</span>;<br>  turnDown = <span class="hljs-literal">true</span>;<br>  turnRight = <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">switch</span> (dir) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;up&#x27;</span>: turnDown = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>: turnRight = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;down&#x27;</span>: turnUp = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>: turnLeft = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="其他">其他</h4><p>document.addEventListener(‘keydown’, function (e) {…})<br>和remind.addEventListener(‘click’, function () {alert(‘…’);})就不贴出来啦</p><p>完整的 JavaScript 的代码可以去<a href="https://github.com/Hower454516977/Snake"> 我的 Github </a>取。</p><h2 id="总结-v4">总结</h2><p>对于一个初学者来说，能自己通过思考，结合之前学过的知识来完成一个小游戏，还是蛮有成就感的事情啊。如果有初学者也想自己动手写一下这个小游戏的话，可以参考我的思路来试着完成。我的代码肯定还有很多需要优化的地方，恳请大佬们提出意见和指导 QWQ</p>]]></content>
    
    
    <categories>
      
      <category>小游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
